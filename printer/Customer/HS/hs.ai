%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 25.0.0
%%Title: (hs.ai)
%%CreationDate: 5/2/2023 3:54 PM
%%Canvassize: 16383
%%BoundingBox: 166 86 634 513
%%HiResBoundingBox: 166 87 634 513
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 400.5 299.5 400.5 299.5
%AI3_TileBox: -20.9449 2.36221 820.8551 597.5622
%AI3_DocumentPreview: None
%AI5_ArtSize: 800 600
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -544 775 1 1499 906 18 0 0 78 121 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 120 8
%%BeginData: 17312 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFD1BFF7D7DFD63527DA8FD18FF52FD
%66F8277DFD16FF27F8277D7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8
%A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D
%A8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8
%A87DA8A8A87DA8A8A87DA8A8A87DFD05A87D52F827A8FD14FF7DF827FD66
%FF7DF827FD14FF52F8A2FD67FF52F8A8FD13FF2720A8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD1F
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FD07FF27F87DFD13FF2727FD04FFA82752274C2752274C2752274C275227
%4C2752274C2752274C2752274C2752272727FD1BFF7D27274C2752274C27
%52274C2752274C2752274C2752274C2752274C2752272727FD06FF7DF87D
%FD13FFF827A8FD04FF52F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8
%F827F8F8F827F8F8F827F827A8FD1AFF52F827F8F8F827F8F8F827F8F8F8
%27F8F8F827F8F8F827F8F8F827F8F8F827F827A8FD05FF52F852FD13FF27
%27FD06FF7DF827F8272727F8272727F8272727F8272727F8272727F82727
%27F827F852A8FD1BFFA852F827F8272727F8272727F8272727F8272727F8
%272727F8272727F827F827A8FD06FF7DF87DFD13FFF827A8FD06FF52F827
%F827F827F827F827F827F827F827F827F827F827F827F827F852FD1FFF52
%F827F827F827F827F827F827F827F827F827F827F827F827F827F852A8FD
%07FF52F852FD13FF2721FD08FF52F827F8272727F8272727F8272727F827
%2727F8272727F827F852FD21FF7DF827F8272727F8272727F8272727F827
%2727F8272727F827F852FD09FF7DF87DFD13FFF827A8FD07FFA827F827F8
%27F827F827F827F827F827F827F827F827F827F827A8FFA8FD20FF7DF821
%F827F827F827F827F827F827F827F827F827F827F87DFFFFA8FD07FF52F8
%52FD13FF2727FD09FFA827F8272727F8272727F8272727F8272727F82727
%27F827A8FD24FFA8F8272727F8272727F8272727F8272727F8272727F8A8
%FD0BFF7DF87DFD13FFF827A8FD09FFA827F827F827F827F827F827F827F8
%27F827F827F8F827FD26FFA8F827F827F827F827F827F827F827F827F827
%F8A8FD0CFF52F87DFD13FF2727FD0BFFA827F8272727F8272727F8272727
%F8272727F827F8A8FD27FFA8F8272727F8272727F8272727F8272727F8A8
%FD0DFF7DF87DFD13FFF827A8FD0BFF7D21F827F827F827F827F827F827F8
%27F827F827FD12FFA8A87DA8A8FD12FF52F827F827F827F827F827F827F8
%27F827FD0EFF52F852FD13FF2727FD0DFF7D272727F8272727F8272727F8
%272727F82752FD10FF7D2727F827F827277DA8FD0FFF52272727F8272727
%F8272727F8FD0427FD0EFF7DF87DFD13FFF827A8FD0DFF2727F827F827F8
%27F827F827F827F827F87DFD0EFF7D27F8F8F827F827F827F82752FD0EFF
%52F827F827F827F827F827F827F827F827FD0EFF52F852FD13FF2721FD0E
%FF52F8272727F8272727F8272727F82721277DFD0DFF5220F8272727F827
%2727F827F8F827FD0DFF5227F8272727F8272727F8272727F82727FD0EFF
%7DF87DFD13FFF827A8FD0DFF27F8F827F827F827F827F827F827F827F8A8
%FD0CFF27F8F827F827F827F827F827F827F8F827FD0CFF52F827F827F827
%F827F827F827F827F827FD0EFF52F852FD13FF2727FD0EFF52F8272727F8
%272727F8272727F8272727A8FD0BFF52272727F8272727F8272727F82727
%27F82752FD0BFF5227F8272727F8272727F8272727F82727FD0EFF7DF87D
%FD13FFF827A8FD0DFF52F8F827F827F827F827F827F827F827F8A8FD0AFF
%7DF8F827F827F827F827F827F827F827F827F8277DFD0AFF52F827F827F8
%27F827F827F827F827F852FD0EFF52F87DFD13FF2727FD0EFF52F827F827
%2727F8272727F8272727F827A8FD0AFF52F827F8272727F8272727F82727
%27F8272727F852FD0AFF52272727F8272727F8272727F8FD0427FD0EFF7D
%F87DFD13FFF827A8FD0DFF2721F827F827F827F827F827F827F827F8A8FD
%09FFA8F827F827F827F827F827F827F827F827F827F827F8A8FD09FF52F8
%27F827F827F827F827F827F827F827A8FD0DFF52F852FD13FF2727FD0EFF
%52F827F8272727F8272727F8272727F827A8FD09FF7D272727F8272727F8
%272727F8272727F8272727F8277DFD09FF52272727F8272727F8272727F8
%FD0427FD0EFF7DF87DFD13FFF827A8FD0DFF2727F827F827F827F827F827
%F827F827F8A8FD09FF52F827F827F827F827F827F827F827F827F827F827
%F87DFD09FF52F827F827F827F827F827F827F827F827A8FD0DFF52F852FD
%13FF2721FD0EFF52F8272727F8272727F8272727F8272027A8FD09FF2727
%F8272727F8272727F8272727F8272727F827272752FD09FF5227F8272727
%F8272727F8272727F82727FD0EFF7DF87DFD13FFF827A8FD0DFF27F8F827
%F827F827F827F827F827F827F8A8FD08FFA827F827F827F827F827F827F8
%27F827F827F827F827F852FD09FF52F827F827F827F827F827F827F827F8
%27A8FD0DFF52F852FD13FF2727FD0EFF52F8272727F8272727F8272727F8
%272727A8FD09FF2727F8272727F8272727F8272727F8272727F827272752
%FD09FF5227F8272727F8272727F8272727F82727FD0EFF7DF87DFD13FFF8
%27A8FD0DFF52F8F827F827F827F827F827F827F827F8A8FD08FFA827F827
%F827F827F827F827F827F827F827F827F827F852FD09FF52F827F827F827
%F827F827F827F827F827A8FD0DFF52F87DFD13FF2727FD0EFF52F827F827
%2727F8272727F8272727F827A8FD09FFFD0427F8272727F8272727F82727
%27F8272727F82752FD09FF52272727F8272727F8272727F8FD0427FD0EFF
%7DF87DFD13FFF827A8FD0DFF2721F827F827F827F827F827F827F827F8A8
%FD08FFA827F827F827F827F827F827F827F827F827F827F827F852FD09FF
%52F827F827F827F827F827F827F827F827A8FD0DFF52F852FD13FF2727FD
%0EFF52F827F8272727F8272727F8272727F827A8FD09FFFD0427F8272727
%F8272727F8272727F8272727F82752FD09FF52272727F8272727F8272727
%F8FD0427FD0EFF7DF87DFD13FFF827A8FD0DFF2727F827F827F827F827F8
%27F827F827F8CAFD08FFA827F827F827F827F827F827F827F827F827F827
%F827F876FD09FF52F827F827F827F827F827F827F827F827A8FD0DFF52F8
%52FD13FF27F8FD0EFF52F8272727F8272727F8272727F827F827A8FD09FF
%2727F8272727F8272727F8272727F8272727F827272752FD09FF5227F827
%2727F8272727F8272727F82727FD0EFF7DF87DFD13FF2727A8FD0DFF27F8
%F827F827F827F827F827F827F827F8A8FD08FFA827F827F827F827F827F8
%27F827F827F827F827F827F852FD09FF52F827F827F827F827F827F827F8
%27F827A8FD0DFF52F852FD13FF5221FD0EFF52F8272727F8272727F82727
%27F8272127A8FD09FF2727F8272727F8272727F8272727F8272727F8FD04
%277D7D7D77FD057D2727F8272727F8272727F8272727F82727FD0EFF7DF8
%7DFD13FF2727A8FD0DFF52F8F827F827F827F827F827F827F827F8A8FD08
%FFA827F827F827F827F827F827F827F827F827F827F827F827F827F8F8F8
%27F8F8F827F827F827F827F827F827F827F827F827A8FD0DFF52F87DFD13
%FF5227FD0EFF52F827F8272727F8272727F8272727F827A8FD09FFF82727
%27F8272727F8272727F8272727F8272727F8272727F8272727F8272727F8
%272727F8272727F8272727F8FD0427FD0EFF7DF87DFD13FF2727A8FD0DFF
%2721F827F827F827F827F827F827F827F8FD09FFA827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827A8FD0DFF52F852FD13FF5227FD0EFF52F827F827
%2727F8272727F8272727F827FD0AFFFD0427F8272727F8272727F8272727
%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F8FD
%0427FD0EFF7DF87DFD13FF2727A8FD0DFF2727F827F827F827F827F827F8
%27F827F8FD09FFA827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827A8FD0D
%FF52F852FD13FF4BF8FD0EFF52F8272727F8272727F8272727F827F827FD
%0AFF2727F8272727F8272727F8272727F8272727F8272727F8272727F827
%2727F8272727F8272727F8272727F8272727F82727FD0EFF7DF87DFD13FF
%2727A8FD0DFF52F8F827F827F827F827F827F827F82721FD09FF7D27F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827A8FD0DFF52F852FD13FF5221FD0E
%FF7DF8272727F8272727F8272727F827F827FD0AFFF821F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F8272727F8
%272727F8272727F82727FD0EFF7DF87DFD13FF2727A8FD0DFF52F8F827F8
%27F827F827F827F827F82727FD0AFFA8527D52FD047DA87D7D7DA87D7D7D
%A87D7D7DA87D7D7DA87D7D7DA87D7D7D52F827F827F827F827F827F827F8
%27F827A8FD0DFF52F87DFD13FF5227FD0EFF7DF827F8272727F8272727F8
%272727F852FD2AFF7D272727F8272727F8272727F8272727F8FD0EFF7DF8
%7DFD13FF2727A8FD0DFF52F8F827F827F827F827F827F827F8F827FD2AFF
%7DF827F827F827F827F827F827F827F827A8FD0DFF52F852FD13FF5227FD
%0EFF7DF827F8272727F8272727F8272727F852FD2AFF7D272727F8272727
%F8272727F8FD0427FD0EFF7DF87DFD13FF2727A8FD0DFF5220F827F827F8
%27F827F827F827F82127FD2AFF7DF827F827F827F827F827F827F827F827
%A8FD0DFF52F852FD13FF4BF8FD0EFF7DF8272727F8272727F8272727F827
%F852FD2AFF7D27F8272727F8272727F8272727F82727FD0EFF7DF87DFD13
%FF2727A8FD0DFF52F8F827F827F827F827F827F827F82727FD2AFF7DF827
%F827F827F827F827F827F827F827A8FD0DFF52F852FD13FF5221FD0EFF7D
%F8272727F8272727F8272727F827F852FD2AFF7D27F8272727F8272727F8
%272727F82727FD0EFF7DF87DFD13FF2727A8FD0DFF52F8F827F827F827F8
%27F827F827F82752FD2AFF7DF827F827F827F827F827F827F827F827A8FD
%0DFF52F87DFD13FF5227FD0EFF7DF827F8272727F8272727F8272727F852
%FD2AFF7D272727F8272727F8272727F8272727F8FD0EFF7DF87DFD13FF27
%27A8FD0DFF52F8F827F827F827F827F827F827F8F827FD2AFF7DF827F827
%F827F827F827F827F827F827A8FD0DFF52F852FD13FF5227FD0EFF7DF827
%F8272727F8272727F8272727F852FD2AFF7D272727F8272727F8272727F8
%FD0427FD0EFF7DF87DFD13FF2727A8FD0DFF5220F827F827F827F827F827
%F827F827F8FD1F524CA8FD09FF7DF827F827F827F827F827F827F827F827
%A8FD0DFF52F852FD13FF4BF8FD0EFF7DF8272727F8272727F8272727F827
%2727F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F8F852FD09FF7DF8F8272727F8272727F8272727F82727FD0EFF7DF8
%7DFD13FF2727A8FD0DFF52F8F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F87D
%FD09FF7DF827F827F827F827F827F827F827F827A8FD0DFF52F852FD13FF
%5221FD0EFF7DF8272727F8272727F8272727F8272727F8272727F8272727
%F8272727F8272727F8272727F8272727F8272727F82727277DFD09FF7D27
%F8272727F8272727F8272727F82727FD0EFF7DF87DFD13FF2727A8FD0DFF
%52F8F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F87DFD09FF7DF827F827F827
%F827F827F827F827F827A8FD0DFF52F87DFD13FF5227FD0EFF7DF827F827
%2727F8272727F8272727F8272727F8272727F8272727F8272727F8272727
%F8272727F8272727F8272727F8277DFD09FF52272727F8272727F8272727
%F8272727F8FD0EFF7DF87DFD13FF2727A8FD0DFF52F8F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F87DFD09FF52F827F827F827F827F827F827F827F827
%A8FD0DFF52F852FD13FF5227FD0EFF7DF827F8272727F8272727F8272727
%F8272727F8272727F8272727F8272727F8272727F8272727F8272727F827
%2727F8277DFD09FF52272727F8272727F8272727F8FD0427FD0EFF7DF87D
%FD13FF2727A8FD0DFF5220F827F827F827F827F827F827F827F827F8F8F8
%27F8F8F827F827F827F827F827F827F827F827F827F827F827F827F87DFD
%09FF52F827F827F827F827F827F827F827F827A8FD0DFF52F852FD13FF4B
%F8FD0EFF7DF8272727F8272727F8272727F82721277DFFFD07A87DF827F8
%272727F8272727F8272727F8272727F82727F87DFD09FF5227F8272727F8
%272727F8272727F82727FD0EFF7DF87DFD13FF2727A8FD0DFF52F8F827F8
%27F827F827F827F827F827F8FD09FFA827F827F827F827F827F827F827F8
%27F827F827F827F87DFD09FF52F827F827F827F827F827F827F827F8277D
%FD0DFF52F852FD13FF5221FD0EFF7DF8272727F8272727F8272727F82721
%27A8FD08FFA8F827F8272727F8272727F8272727F8272727F82727277DFD
%09FF5227F8272727F8272727F8272727F827F8A8FD0DFF7DF87DFD13FF27
%27A8FD0DFF7DF8F827F827F827F827F827F827F827F8A8FD08FF7D27F827
%F827F827F827F827F827F827F827F827F827F87DFD09FF7DF827F827F827
%F827F827F827F827F8277DFD0DFF52F87DFD13FF5227FD0EFF7DF827F827
%2727F8272727F8272727F827A8FD08FFA8F8272727F8272727F8272727F8
%272727F8272727F8277DFD09FF52272727F8272727F8272727F8272727F8
%A8FD0DFF7DF87DFD13FF2727A8FD0DFF52F8F827F827F827F827F827F827
%F827F8A8FD08FF7D27F827F827F827F827F827F827F827F827F827F827F8
%7DFD09FF52F827F827F827F827F827F827F827F8277DFD0DFF52F852FD13
%FF5227FD0EFF7DF827F8272727F8272727F8272727F827A8FD08FFA8F827
%2727F8272727F8272727F8272727F8272727F8277DFD09FF52272727F827
%2727F8272727F8272727F8A8FD0DFF7DF87DFD13FF2727A8FD0DFF52F8F8
%27F827F827F827F827F827F827F8A8FD08FF7D27F827F827F827F827F827
%F827F827F827F827F827F87DFD09FF52F827F827F827F827F827F827F827
%F8277DFD0DFF52F852FD13FF4BF8FD0EFF7DF8272727F8272727F8272727
%F8272027A8FD08FFA8F827F8272727F8272727F8272727F8272727F82727
%277DFD09FF5227F8272727F8272727F8272727F827F8A8FD0DFF7DF87DFD
%13FF2727A8FD0DFF52F8F827F827F827F827F827F827F827F8A8FD08FF7D
%27F827F827F827F827F827F827F827F827F827F827F87DFD09FF52F827F8
%27F827F827F827F827F827F8277DFD0DFF52F852FD13FF5220FD0EFF7DF8
%272727F8272727F8272727F8272727A8FD08FFA8F827F8272727F8272727
%F8272727F8272727F82727277DFD09FF5227F8272727F8272727F8272727
%F827F8A8FD0DFF7DF87DFD13FF2727A8FD0DFF7DF8F827F827F827F827F8
%27F827F827F8A8FD08FFA827F827F827F827F827F827F827F827F827F827
%F827F8A8FD09FF52F827F827F827F827F827F827F827F8277DFD0DFF52F8
%7DFD13FF2727FD0EFF7DF827F8272727F8272727F8272727F827A8FD09FF
%FD0427F8272727F8272727F8272727F8272727F852FD0AFF52272727F827
%2727F8272727F8272727F8A8FD0DFF7DF87DFD13FFF827A8FD0DFF52F8F8
%27F827F827F827F827F827F827F8A8FD09FF7DF827F827F827F827F827F8
%27F827F827F827F8F852FD0AFF52F827F827F827F827F827F827F827F827
%7DFD0DFF52F852FD13FF2727FD0EFF7DF827F8272727F8272727F8272727
%F827A8FD09FFA8272127F8272727F8272727F8272727F8272727F8FD0BFF
%FD0427F8272727F8272727F8272727F8A8FD0DFF7DF87DFD13FFF827A8FD
%0DFF52F8F827F827F827F827F827F827F827F8A8FD0AFF52F8F827F827F8
%27F827F827F827F827F827F87DFD0BFF27F827F827F827F827F827F827F8
%27F8277DFD0DFF52F852FD13FF2721FD0EFF7DF8272727F8272727F82727
%27F8272027A8FD0BFFFD0427F8272727F8272727F8272727F852FD0CFF27
%27F8272727F8272727F8272727F827F8A8FD0DFF7DF87DFD13FFF827A8FD
%0DFF52F8F827F827F827F827F827F827F827F8A8FD0BFFA8F820F827F827
%F827F827F827F827F827A8FD0BFFA827F827F827F827F827F827F827F827
%F8277DFD0DFF52F852FD13FF2727FD0EFF7DF8272727F8272727F8272727
%F8272727A8FD0CFFA82727F8272727F8272727F827F852A8FD0DFF2727F8
%272727F8272727F8272727F827F8A8FD0DFF7DF87DFD13FFF827A8FD0DFF
%52F8F827F827F827F827F827F827F827F8A8FD0EFF5227F827F827F827F8
%F8277DFD0EFFA827F827F827F827F827F827F827F827F8217DFD0DFF52F8
%7DFD13FF2727FD0EFF7DF827F8272727F8272727F8272727F827A8FD0FFF
%A87D4C52272727527DFD10FFA8F8272727F8272727F8272727F8272727F8
%27A8FD0CFF7DF87DFD13FFF827A8FD0DFF52F8F827F827F827F827F827F8
%27F827F8A8FD12FFA8FFA8FD13FF52F8F827F827F827F827F827F827F827
%F827F827A8FD0BFF52F852FD13FF2727FD0DFFA852F827F8272727F82727
%27F8272727F82727FD28FF27F8272727F8272727F8272727F8272727F827
%F827A8FD0AFF7DF87DFD13FFF827A8FD0BFFA827F827F827F827F827F827
%F827F827F827F82127A8FD25FF7DF827F827F827F827F827F827F827F827
%F827F827F827A8FD09FF52F852FD13FF2721FD0BFF7D27F827F8272727F8
%272727F8272727F8272727F82727A8FD23FFA8F8272727F8272727F82727
%27F8272727F8272727F827F84BA8FD08FF7DF87DFD13FFF827A8FD09FF52
%F8F827F827F827F827F827F827F827F827F827F827F827F87DFD21FFA8F8
%F8F827F827F827F827F827F827F827F827F827F827F827F827A8FD07FF52
%F852FD13FF2727FD09FF5227F8272727F8272727F8272727F8272727F827
%2727F8272727F87DFD1FFFA8272720272727F8272727F8272727F8272727
%F8272727F8272727F852FD07FF7DF87DFD13FFF827A8FD06FFA827F8F827
%F827F827F827F827F827F827F827F827F827F827F827F827F852FD1DFF7D
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F852
%FD06FF52F87DFD13FF2720FD06FFA82720F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F852FD1BFF7DF827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F852FD05FF7DF87DFD
%13FFF827A8FD05FF7D27F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F82727FD1BFF2727F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F852FD04FF52F852FD13FF52F8A8
%FD06FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FD1DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FD04FF52F8A8FD13FF27F87DFD67FF27F87DFD13
%FF7DF852FD66FF7D2727FD14FFA827F8527DA8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD04A87D27F852
%FD15FF7D27F821F8272727F8272727F8272727F8272727F8272727F82727
%27F8272727F8272727F8272727F8272727F8272727F8272727F8272727F8
%272727F8272727F8272727F8272727F8272727F8272727F8272727F82727
%27F8272727F8272727F8272727F827F8F8F852FD17FFA8522727F8272027
%F8272027F8272027F8272027F8272027F8272027F8272027F8272027F827
%2027F8272027F8272027F8272027F8272027F8272027F8272027F8272027
%F8272027F8272027F8272027F8272027F8272027F8272027F8272027F827
%2027F827277DFD1BFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FDFCFFFDFCFFFDFCFFFDFCFF
%FD9FFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.749721 0.679194 0.670497 0.901457 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
0 O
0 0 0 0 0.996078 0.996078 0.996078 Xa
0 J 0 j 1 w 10 M []0 d0 XR
400.1184 87.1078 m
323.5089 87.1078 246.8993 87.1433 170.2901 87 C
166.5638 86.9931 165.9974 87.9154 166 91.3987 c
166.1024 230.4546 166.1009 369.5105 166.007 508.5664 c
166.0047 511.9671 166.4497 513.0033 170.2594 513 c
323.4784 512.8684 476.6974 512.8718 629.9164 512.9878 c
633.4282 512.9905 633.9598 512.171 633.9574 508.8465 C
633.8544 369.6242 633.8425 230.4019 634 91.1797 C
634.0046 87.0917 632.5831 87.0481 629.4473 87.0511 C
553.0044 87.1237 476.5614 87.1078 400.1184 87.1078 C
f
0.711055 0.671015 0.638697 0.740841 0.129412 0.121569 0.12549 Xa
393.4886 483.1088 m
451.7927 483.1074 510.0985 482.8626 568.3995 483.2818 c
582.7514 483.385 591.7413 474.6961 591.7131 459.9095 C
591.51 353.3021 591.5997 246.6942 591.5506 140.0864 C
591.5437 125.0038 583.7461 117.2835 568.7855 117.2821 C
451.8442 117.2708 334.9029 117.2657 217.9616 117.2769 C
203.5506 117.2783 195.7064 125.0683 195.7043 139.457 c
195.6884 246.5645 195.8175 353.6722 195.573 460.779 c
195.5415 474.6044 204.5937 483.3515 218.0776 483.2671 c
276.546 482.9012 335.0179 483.1102 393.4886 483.1088 C
f
0 0 0 0 0.996078 0.996078 0.996078 Xa
203.1052 460.9208 m
204.4473 472.6542 207.6173 475.599 219.3693 475.6006 c
335.6112 475.616 451.853 475.6109 568.0948 475.5844 C
580.0269 475.5817 583.7882 471.6496 583.7877 459.5782 C
583.7829 354.3329 583.7822 249.0875 583.7802 143.8422 C
583.7802 142.3435 583.7931 140.8445 583.7768 139.346 c
583.6721 129.7 579.3084 125.2255 569.7426 125.1977 C
551.5904 125.1449 533.4378 125.1889 515.2854 125.1855 C
416.8627 125.167 318.4401 125.1506 220.0174 125.1212 C
206.9848 125.1173 203.3551 128.6781 203.3163 141.6062 c
203.3108 143.4292 203.1647 145.2518 203.0836 147.0745 C
202.1406 148.7989 202.609 150.6686 202.6085 152.463 C
202.5825 253.4894 202.5823 354.5157 202.6097 455.542 C
202.6102 457.3329 202.1193 459.2064 203.1052 460.9208 C
f
0.713466 0.672877 0.640223 0.755489 0.121569 0.113725 0.117647 Xa
203.1052 460.9208 m
203.1953 453.4447 203.3629 445.9687 203.3638 438.4926 c
203.376 343.1732 203.3658 247.8537 203.3471 152.5343 C
203.3468 150.7143 203.1753 148.8944 203.0836 147.0745 C
201.4297 148.5401 202.0992 150.4995 202.0986 152.245 c
202.0671 253.4173 202.067 354.5897 202.0988 455.762 C
202.0993 457.5054 201.4239 459.4692 203.1052 460.9208 C
f
0.711055 0.671015 0.638697 0.740841 0.129412 0.121569 0.12549 Xa
568.8394 138.7999 m
563.9261 138.7999 560.3116 138.7946 556.6971 138.8007 C
521.051 138.8606 485.4049 138.906 449.7591 139.0301 C
447.8895 139.0367 445.579 137.9405 444.5877 141.2589 C
443.6059 144.545 446.0686 144.9201 447.6406 146.0394 C
457.6216 153.1461 465.8464 161.5526 469.2505 173.8063 C
469.9811 176.4365 470.1225 179.053 470.1614 181.7019 C
470.8169 226.3332 471.3716 270.9663 472.182 315.5948 C
472.2666 320.2584 470.8849 321.2521 466.4393 321.2284 C
430.1277 321.035 393.8143 321.18 357.5027 320.9833 C
353.1367 320.9596 351.8599 321.9762 351.97 326.4608 C
352.4158 344.608 352.4555 362.7653 352.619 380.9191 C
352.6703 386.6073 353.4567 392.1835 355.0689 397.6308 C
363.2683 425.3345 397.8293 436.8007 419.855 418.8174 C
430.0118 410.5247 435.0503 399.1724 435.333 386.0466 C
435.5444 376.2279 435.22 366.3939 434.9619 356.5712 c
434.8889 353.7963 435.6705 352.8021 438.5749 352.8532 c
448.0665 353.0203 457.5641 353.0056 467.0566 352.87 C
469.7843 352.831 470.874 353.513 470.8444 356.4518 C
470.6018 380.4345 470.4533 404.4184 470.4021 428.4023 c
470.3964 431.1037 469.1038 432.6524 467.2714 434.223 C
459.3054 441.0508 451.4044 447.9543 443.4523 454.7983 C
441.8759 456.155 440.6876 457.2422 441.6667 459.7985 C
442.6343 462.3248 444.3566 461.845 446.0675 461.8472 c
482.7131 461.8942 519.3586 461.9174 556.0042 461.9316 c
557.7585 461.9323 559.6456 462.4078 560.5918 460.0508 c
561.5541 457.6538 560.3722 456.3969 558.7072 455.0088 C
550.5215 448.1847 542.4629 441.207 534.2168 434.4576 c
531.9593 432.6098 530.9429 430.7107 530.9628 427.7377 C
531.5146 345.2926 531.9971 262.847 532.4131 180.4011 C
532.4295 177.1493 533.518 174.8538 535.7943 172.5679 C
546.5841 161.7325 557.2025 150.7264 568.8394 138.7999 C
f
218.4325 461.9198 m
221.832 461.9198 223.9567 461.92 226.0814 461.9197 C
262.7188 461.9144 299.3562 461.9272 335.9935 461.8559 c
338.0686 461.8519 340.7956 463.0574 341.8104 459.6737 c
342.7759 456.454 340.1418 455.7414 338.3884 454.4144 c
324.6395 444.0092 316.6722 431.0598 316.6341 412.9726 c
316.5438 370.0154 315.6054 327.0588 314.8008 284.1059 C
314.7121 279.3702 315.448 277.6975 320.8113 277.7419 C
356.9467 278.0405 393.086 277.8243 429.2229 278.0058 C
433.6104 278.0279 434.808 276.9409 434.6938 272.4835 C
434.169 252.0147 435.4249 231.4923 433.8469 211.0667 C
431.574 181.6458 402.087 163.6732 375.5725 175.0596 C
362.0192 180.8799 351.4163 197.3883 351.5661 212.5029 c
351.6635 222.327 351.672 232.1557 352.0217 241.9717 c
352.1491 245.5479 350.9448 246.4733 347.5258 246.3746 c
338.3728 246.1104 329.208 246.0555 320.0522 246.1972 c
316.8922 246.2461 316.1209 245.1343 316.1545 242.1657 C
316.426 218.1882 316.605 194.2094 316.6858 170.2306 c
316.6945 167.6657 318.0092 166.3403 319.7261 164.9373 C
327.3319 158.7224 334.8789 152.4356 342.4892 146.2262 C
344.224 144.8107 345.8916 143.5954 344.8349 140.8985 c
343.9031 138.5202 341.9978 139.0104 340.239 139.0075 C
304.2678 138.9478 268.2966 138.8974 232.3254 138.8684 C
230.4392 138.8669 228.4296 138.2973 227.42 140.9948 c
226.3166 143.9432 228.4501 144.8858 230.0297 146.1833 C
237.4897 152.3109 244.9245 158.4736 252.5302 164.4167 c
254.9733 166.3257 256.0688 168.2599 256.0476 171.4787 C
255.5063 253.7388 255.0635 335.9995 254.6897 418.2606 C
254.6741 421.6882 253.5556 424.1613 251.2258 426.6261 C
240.4899 437.9842 229.9307 449.5094 218.4325 461.9198 C
f
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
